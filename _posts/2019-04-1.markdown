---
layout:     post
title:      "直接调用阿里云视频点播API实现视频播放"
subtitle:   " \"重新完善了一下在我CSDN中的这篇博客，梳理思路使大家更快的上手\""
date:       2019-04-11 22:46:00
author:     "XiaYan"
header-img: "img/post-bg-ali.jpg"
catalog: true
tags:
    - 视频
    - Android
---

> “每天进步一点点！”


## 前言

17年的时候公司让我要实现一个视频播放的功能，正常是不需要移动端调用阿里云视频API的，这件事是由后台来完成的。但是公司那会后台没时间我就给实现了。

[跳过废话，直接看技术实现 ](#build) 



后来经过了半年左右CSDN的这篇博客被查阅的次数超过了6000次我觉得有必要重新整理一下了，梳理一下，以便帮助需要的人。


<p id = "build"></p>
---

## 正文


先来看一眼官方的[API调用文档](https://help.aliyun.com/document_detail/44435.html?spm=5176.product29932.6.618.DUYkdb)


有人会说了你直接扔出个阿里云的API你这不是搞笑吗？少侠勿急，且听我细细道来。

【调用流程】
	想使用阿里云GET请求需要你一些参数，我这里以获取阿里云获取视频列表的接口为例
	
   `http://vod.cn-shanghai.aliyuncs.com/?Action=GetVideoList&Status=Normal&Format=JSON&<公共参数>`

   ![img](/img/in-post/xy_ali.png)

公共参数要数 签名结果串最难搞定的，重点要说这个。


## 签名的配置及其步骤 

【0】 我把一些参数都暴露，让大家看的更清晰，当然AccessSecret   AccessKey 都是不对的但是字符位数相同


    private String WJ_Home_AccessKey = "LTAIPuR8IfTyWIan";
    private String WJ_Home_AccessSecret = "PW0mx2aGuhGhYHj7qeXtisQ9Skjbvq";
    private String playKey = "ex491ux1dof8qnpu2n99k88n9uphb4kyr4wgq62ws1dawxcnusthjgfob935838t";
    private static final String ISO8601_DATE_FORMAT = "yyyy-MM-dd'T'HH:mm:ss'Z'";
    private String CateId = "274011476"; //这个是视频分类ID，可以填默认-1
    final String HTTP_METHOD = "GET";
    final String SEPARATOR = "&";
    final String EQUAL = "=";
    private static final String ENCODE_TYPE = "UTF-8";
    private String Timestamp = formatIso8601Date(new Date());
    private String SignatureNonce = UUID.randomUUID().toString();



【1】生成签名的过程

	Map<String, String> parameterMapX = new HashMap<String, String>();
	//=============7大公共参数========================
    parameterMapX.put("Format", "JSON");
    parameterMapX.put("Version", "2017-03-21");
    parameterMapX.put("SignatureMethod", "HMAC-SHA1");
    parameterMapX.put("SignatureVersion", "1.0");
    parameterMapX.put("AccessKeyId", WJ_Home_AccessKey);
    parameterMapX.put("Timestamp", Timestamp);
    parameterMapX.put("SignatureNonce", SignatureNonce);
	//=============分割线下的是特有参数===============
    parameterMapX.put("Action", "GetVideoList");
    parameterMapX.put("PageNo", "1");
    parameterMapX.put("PageSize", "10");
    parameterMapX.put("CateId", CateId);
    List<String> sortedKeys = new ArrayList<String>(parameterMapX.keySet());
    Collections.sort(sortedKeys);
    //开始生成签名
    String PuR8IfTyWIan = GoToSign(sortedKeys, parameterMapX);
	//网络请求 请求视频列表

 【3-1】计算ISO8601时间方法

	``` 
	private static String formatIso8601Date(Date date) {
        SimpleDateFormat df = new SimpleDateFormat(ISO8601_DATE_FORMAT);
        df.setTimeZone(new SimpleTimeZone(0, "GMT"));
        return df.format(date);
    }

	``` 
	
 【3-2】转码工具类

		``` 
	private static String percentEncode(String value) {
        if (value == null) return null;
        try {
            return URLEncoder.encode(value, ENCODE_TYPE).replace("+", "%20").replace("*", "%2A").replace("%7E", "~");
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }
        return value;
    }


	``` 
	
 【3-3】hmac_sha1算法
 
		``` 
	private String hmac_sha1(String key, String datas) {
        String reString = "";

        try {
            byte[] data = key.getBytes("UTF-8");
            //根据给定的字节数组构造一个密钥,第二参数指定一个密钥算法的名称
            SecretKey secretKey = new SecretKeySpec(data, "HmacSHA1");
            //生成一个指定 Mac 算法 的 Mac 对象
            Mac mac = Mac.getInstance("HmacSHA1");
            //用给定密钥初始化 Mac 对象
            mac.init(secretKey);

            byte[] text = datas.getBytes("UTF-8");
            //完成 Mac 操作
            byte[] text1 = mac.doFinal(text);

            reString = Base64.encodeToString(text1, Base64.DEFAULT);

        } catch (Exception e) {
            // TODO: handle exception
        }

        return reString;
    }

	``` 
	
 【3-4】签名方法   这里我把获取签名封装成了一个方法，更方便大家的使用
 
		``` 
	private String GoToSign(List<String> sortedKeys, Map<String, String> parameterMap) {
        StringBuilder stringToSign = new StringBuilder();
        stringToSign.append(HTTP_METHOD).append(SEPARATOR);
        stringToSign.append(percentEncode("/")).append(SEPARATOR);
        StringBuilder QueryString = new StringBuilder();
        for (String key : sortedKeys) {
            // 此处需要对key和value进行编码
            String value = parameterMap.get(key);
            QueryString.append(SEPARATOR).append(percentEncode(key)).append(EQUAL).append(percentEncode(value));
			  //  append的拼接样式 请看 【4-1】
        }
        StringBuilder append = stringToSign.append(percentEncode(QueryString.toString().substring(1)));
        String PuR8IfTyWIan = hmac_sha1(WJ_Home_AccessSecret + "&", append.toString()).trim();
		  //  PuR8IfTyWIan 样式 请看 【4-2】
        return PuR8IfTyWIan;
    }


	``` 
	
 【4-1】append 的拼接样式
 
  `GET&%2F&AccessKeyId%3DLTAIPuR8IfTyWIan%26Action%3DGetVideoPlayAuth%26Format%3DJSON%26SignatureMethod%3DHMAC-SHA1%26SignatureNonce%3D578a50c1-280d-4a34-bffc-e0sda6b2df76%26SignatureVersion%3D1.0%26Timestamp%3D2017-08-11T08%253A56%253A39Z%26Version%3D2017-03-21%26VideoId%3D86d0a02dfccc46bab045d954e6b70036`
 
 【4-2】PuR8IfTyWIan的样式
 
   `9or7epLWdsgMIvtRlJZm57HpBGs=`
   
   
   **最后我强调一点 就是拼接URL这一点（我在拼接的时候没有进行转码，也能请求成功！）**
   
   我的URL
   `http://vod.cn-shanghai.aliyuncs.com?Signature=7K0h2pa/JS4KdC6XEKiYrw7a3EU=&SignatureNonce=bb8d6d93-e56c-4e76-b7d8-f4be3490b7e6&Format=JSON&CateId=133999353&SignatureMethod=HMAC-SHA1&Timestamp=2017-08-13T13%3A15%3A22Z&SignatureVersion=1.0&Action=GetVideoList&Version=2017-03-21&PageNo=1&PageSize=10&AccessKeyId=LTAIPuR8IfTyWIan`
   
   阿里云的URL
   `http://vod.cn-shanghai.aliyuncs.com?Signature=UI%2FwKfuvTtphzCKHwPhP0ErtLnc%3D&SignatureVersion=1.0&Action=GetVideoPlayAuth&Format=JSON&VideoId=68a4d2629a339db3207963ac073a88cd&SignatureNonce=578a50c1-280d-4a34-bffc-e06aa6b2df76&Version=2017-03-21&AccessKeyId=testId&SignatureMethod=HMAC-SHA1&Timestamp=2017-03-29T12%3A09%3A11Z`

有人就会说了为什么你不跟着阿里爸爸方法走呢？ 我也想跟着阿里爸爸走啊，条件不允许啊！
经过hmac_sha1我的转码后的签名
	
	 `UI%2QcKDaeGtplzCJHwPhP0ErtLnc%3DOA`
	 
阿里云的转码后的签名
	
	 `UI%2FwKfuvTtphzCKHwPhP0ErtLnc%3D`
	 
为什么没有跟阿里爸爸的方法走，是因为我转码过后就多出个0A,如果按照阿里云的调用方式最后等待我的结果只有 **SignatureDoesNotMatch**
	
	
阿里API给的方法是这样的
	
		``` 
	 // 生成请求URL
		StringBuilder requestURL;
		requestURL = new StringBuilder("http://vod.cn-shanghai.aliyuncs.com?");
		requestURL.append(URLEncoder.encode("Signature", ENCODE_TYPE)).append("=").append(signature);
		for (Map.Entry<String, String> e : parameterMap.entrySet()) {
		requestURL.append("&").append(percentEncode(e.getKey())).append("=").append(percentEncode(e.getValue()));


	``` 
	
因为它把集合中的数据进行了转码，当生成了URL，你对这个url进行请求的时候**InvalidTimeStamp.Format时间戳格式不对**
	
 【解决办法】
 
	 `requestURL.append("&").append(e.getKey()).append("=").append(e.getValue());`
	 
	 
 【网络请求】 我这里用的是nohttp  参数都放上就OK了
	
![img](/img/in-post/xy_ali_q.png) 
 
 
 希望这篇博客可以帮助到你
	
	

	











